#
# This playbook sends an email upon completion.  Where and how are defined by
# a couple variables, which you can set in group_vars/all.yml (an example is provided).
#
# You can also set them with the --extra-vars option if you like.
#
# Required variables are:
#
# from_email   - the source email address
# to_email     - the target email address
# mailhost  - mail server to send mail through
#
- name: "Make sure required variables-vars are set"
  hosts: localhost
  connection: local
  tasks:
    - name: "Check mailhost"
      ansible.builtin.debug:
        msg: "mailhost={{ mailhost | mandatory(msg='The mailhost variable is required.') }}"
    - name: "Check to_email"
      ansible.builtin.debug:
        msg: "to_email={{ to_email | mandatory(msg='The to_email variable is required.') }}"
    - name: "Check from_email"
      ansible.builtin.debug:
        msg: "from_email={{ from_email | mandatory(msg='The from_email variable is required.') }}"


- name: "Deploy database server"
  hosts:
    - db_servers

  roles:
    - python
    - mysql_db

- name: "Deploy a web application"
  hosts:
    - web_servers

  roles:
    - python
    - flask_web

- name: "Deploy a load balancer"
  vars:
    # Apparently I can't generate YAML with Jinja2 templating
    server_address_list: |
      [
      {% for hostname in groups["web_servers"]%}
        {"address": "{{ hostvars[hostname]['ansible_host'] }}:5000"},
      {% endfor %}
      ]
  hosts:
    - lb_servers

  tasks:
    - name: Install NGINX
      vars:
        nginx_service_modify: true
        nginx_service_timeout: 95

      ansible.builtin.include_role:
        name: nginxinc.nginx
        apply:
          become: true

    - name: Configure NGINX
      ansible.builtin.include_role:
        name: nginxinc.nginx_config
        apply:
          become: true
      vars:
        nginx_config_http_template_enable: true
        nginx_config_http_template:
          - template_file: http/default.conf.j2
            deployment_location: /etc/nginx/conf.d/default.conf
            config:
              servers:
                - core:
                  locations:
                    - location: /
                      proxy:
                        pass: http://upstr/
                        set_header:
                          field: Host
                          value: $host
                  aio:
                    threads: default
                  keepalive_timeout: 75s
                  listen:
                    - address: 0.0.0.0
                      port: 80
                      default_server: true
                      ssl: false
                      proxy_protocol: false
                      fastopen: 12
                      backlog: 511
                      rcvbuf: 512
                      sndbuf: 512
                      deffered: false
                      bind: false
                      ipv6only: false
                      reuseport: false
                      so_keepalive: false
              upstreams:
                - name: upstr
                  least_conn: true
                  servers: "{{ server_address_list }}"

- name: "Completion notification"
  hosts: localhost
  connection: local
  vars:
    loadbalancer_uris: |
      {% for hostname in groups["lb_servers"] %}
        http://{{ hostname }}/ or http://{{ hostvars[hostname]["ansible_host"] }}/
      {% endfor %}

  tasks:
    - name: Send email

      community.general.mail:
        subject: "Simple WebApp Installation Completed"
        # Try to send the email to whatever's defined in target_email.
        # If that doesn't exist, try the local user account.
        # Failing that, send it straight to root.
        host: "{{ mailhost | mandatory(msg='The mailhost variable is required.') }}"
        sender: "{{ from_email | mandatory(msg='The from_email variable is required.') }}"
        to:
          - "{{ to_email | mandatory(msg='The to_email variable is required.') }}"
        body: |
          Hello,

          The Simple WebApp installation has been completed.
          If all went well, it should be available at:

          {{ loadbalancer_uris }}
